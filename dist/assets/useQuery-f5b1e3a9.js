import{B as f,y as a,C as c,ab as d}from"./index-e7f13c72.js";import{u as p}from"./utils-b6ca8b49.js";import{u as b,a as C,e as R,b as g,c as E,s as m,f as S,g as h,Q}from"./suspense-119a4564.js";function B(o,i){const u=f({context:o.context}),s=b(),n=C(),e=u.defaultQueryOptions(o);e._optimisticResults=s?"isRestoring":"optimistic",e.onError&&(e.onError=a.batchCalls(e.onError)),e.onSuccess&&(e.onSuccess=a.batchCalls(e.onSuccess)),e.onSettled&&(e.onSettled=a.batchCalls(e.onSettled)),R(e),g(e,n),E(n);const[r]=c.useState(()=>new i(u,e)),t=r.getOptimisticResult(e);if(p(c.useCallback(l=>{const y=s?()=>{}:r.subscribe(a.batchCalls(l));return r.updateResult(),y},[r,s]),()=>r.getCurrentResult(),()=>r.getCurrentResult()),c.useEffect(()=>{r.setOptions(e,{listeners:!1})},[e,r]),m(e,t,s))throw S(e,r,n);if(h({result:t,errorResetBoundary:n,useErrorBoundary:e.useErrorBoundary,query:r.getCurrentQuery()}))throw t.error;return e.notifyOnChangeProps?t:r.trackResult(t)}function w(o,i,u){const s=d(o,i,u);return B(s,Q)}export{w as u};
